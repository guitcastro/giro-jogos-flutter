name: Flutter CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

# Cancelar builds anteriores se houver um novo push
concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Fast validation job - no Android build to avoid NDK delays
  validate:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.7'
          channel: 'stable'
          cache: true
      
      - name: Cache Flutter dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            .dart_tool
          key: flutter-${{ runner.os }}-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            flutter-${{ runner.os }}-
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Verify formatting
        run: dart format --set-exit-if-changed .
      
      - name: Analyze project source
        run: flutter analyze
      
      - name: Run tests
        run: flutter test
      
      - name: Build Web (fast validation)
        run: flutter build web --release
      
      - name: Upload Web Build
        uses: actions/upload-artifact@v4
        with:
          name: web-build
          path: build/web/

  # iOS build job (optimized for CI)
  ios-build:
    runs-on: macos-26
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    timeout-minutes: 45
    permissions:
      contents: read
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1  # Clone superficial para acelerar
      
      - name: Cache CocoaPods
        uses: actions/cache@v4
        with:
          path: |
            ios/Pods
            ~/.cocoapods/repos/trunk
            ~/Library/Caches/CocoaPods
          key: pods-v5-${{ runner.os }}
          restore-keys: |
            pods-v5-${{ runner.os }}
      
      - name: Cache Flutter iOS builds
        uses: actions/cache@v4
        with:
          path: |
            build/ios
            ios/Flutter/ephemeral
            ios/.symlinks
            ios/build
          key: flutter-ios-v5-${{ runner.os }}
          restore-keys: |
            flutter-ios-v5-${{ runner.os }}
      
      # Setup Flutter com cache
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.7'
          channel: 'stable'
          cache: true
          cache-key: flutter-v5-${{ runner.os }}
      
      # Cache das dependências pub
      - name: Cache Pub dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            .dart_tool
          key: pub-v5-${{ runner.os }}-${{ hashFiles('pubspec.yaml') }}
          restore-keys: |
            pub-v5-${{ runner.os }}-
      
      # Instalar dependências
      - name: Install Flutter dependencies
        run: flutter pub get
      
      # Atualizar CocoaPods repo para garantir dependências atualizadas
      - name: Update CocoaPods repo
        run: |
          echo "Verificando status do repo CocoaPods..."
          if [ ! -d "$HOME/.cocoapods/repos/trunk" ]; then
            echo "Inicializando repo CocoaPods..."
            pod setup
          else
            echo "Atualizando repo CocoaPods..."
            pod repo update trunk --silent || echo "Aviso: falha na atualização (continuando...)"
          fi
      
      # Build iOS usando script otimizado
      - name: Build iOS
        run: |
          chmod +x scripts/ci_build_ios.sh
          ./scripts/ci_build_ios.sh
        timeout-minutes: 30
      
      # Upload dos artifacts
      - name: Upload iOS build
        uses: actions/upload-artifact@v4
        with:
          name: ios-runner-app
          path: build/ios/iphoneos/Runner.app
          retention-days: 7

  # Android build job with NDK caching (only for main branch)
  android-build:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: read
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Java JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        
      - name: Cache Android NDK and dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ${{ env.ANDROID_SDK_ROOT }}/ndk/27.0.12077973
            android/.gradle
          key: android-ndk-27.0.12077973-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            android-ndk-27.0.12077973-${{ runner.os }}-
            android-ndk-${{ runner.os }}-
            android-${{ runner.os }}-
        
      - name: Install Android NDK
        run: |
          if [ ! -d "$ANDROID_SDK_ROOT/ndk/27.0.12077973" ]; then
            echo "Installing Android NDK..."
            sdkmanager --install "ndk;27.0.12077973"
          else
            echo "NDK already cached and available"
          fi
          echo "ANDROID_NDK_ROOT=$ANDROID_SDK_ROOT/ndk/27.0.12077973" >> $GITHUB_ENV
          echo "NDK location: $ANDROID_SDK_ROOT/ndk/27.0.12077973"
          
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.7'
          channel: 'stable'
          cache: true
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Build Android release APK
        run: flutter build apk --release --target-platform android-arm64
        
      - name: Upload Android APK
        uses: actions/upload-artifact@v4
        with:
          name: android-apk-release
          path: build/app/outputs/flutter-apk/app-release.apk

  deploy-web:
    needs: validate
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    permissions:
      contents: read
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.7'
          channel: 'stable'
          cache: true
      
      - name: Cache Flutter dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            .dart_tool
          key: flutter-${{ runner.os }}
          restore-keys: |
            flutter-${{ runner.os }}

      - name: Clean
        run: flutter clean            
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Build Web
        run: flutter build web --release
      
      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
          channelId: live
          projectId: giro-jogos
